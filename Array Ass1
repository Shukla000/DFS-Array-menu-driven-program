#include <bits/stdc++.h>
using namespace std;


//Function to Insert element at the beginning
void insert_beg(int array[],int max,int k,int s)
{
    if(s<max)
    {
    for(int i=s;i>0;i--)
    {
        array[i]=array[i-1];
    }
    array[0]=k;
    s++;
    cout<<"Updated Array\n";
    for(int i=0;i<s;i++)
        {
            cout<<array[i]<<"  ";
        }
    }
    else
    {
    cout<<"Array full";
    cout<<endl;
    }
}

//Function to insert element after any position
void insert_afterany(int array[],int max,int k,int s,int pos)
{
    if(s<max)
    {
        for(int i=s;i>pos;i--)
        {
            array[i]=array[i-1];
        }
        array[pos]=k;
        s++;
        cout<<"Updated Array\n";
        for(int i=0;i<s;i++)
        {
            cout<<array[i]<<"  ";
        }
    }

}

//Function to Insert element at the end
void insert_end(int array[],int max,int k,int s)
{
    if(s<max)
    {
        array[s]=k;
        s++;
        cout<<"Updated Array\n";
        for(int i=0;i<s;i++)
        {
            cout<<array[i]<<"  ";
        }
    }
    else{
        cout<<"Array full";
    }
}


//Function to delete element at the beginning
void del_beg(int array[],int s)
{
    if (s <= 0) {
        cout << "Array is empty, nothing to delete." << endl;
    }
    for(int i=0;i<s;i++)
    {
        array[i]=array[i+1];
    }
    s--;
    cout<<"Updated Array\n";
    for(int i=0;i<s;i++)
        {
            cout<<array[i]<<"  ";
        }
}


//Function to delete element at the end
void del_any(int array[],int s, int pos)
{
    if (s <= 0) {
        cout << "Array is empty, nothing to delete." << endl;
    } 
    array[pos]=0;
    s--;
    cout<<"Updated Array\n";
    //int i;
    for(int i=0;i<pos;i++)
    {
        cout<<array[i]<<" ";
    }
    for(int i=pos;i<s;i++)
        {
            array[i]=array[i+1];
            cout<<array[i]<<" ";
        }
        
}




//Function to delete element at the end
void del_end(int array[],int s)
{
   if (s <= 0) {
        cout << "Array is empty, nothing to delete." << endl;
    } 
    array[s-1]=0;
    s--;
    cout<<"Updated Array\n";
    for(int i=0;i<s;i++)
        {
            cout<<array[i]<<"  ";
        }
        

}


//function for Linear Search 
int linearSearch(int array[],int s,int target)
{
  int pos=-1;
  for (int i = 0; i < s; i++) 
  {
      if (array[i] == target) 
      {
        pos=i;
      }
    }
  
  return pos;
}

//Function for binary search
void bin_search(int array[],int first,int last,int num)
{
    //approach 1
    /*int middle=(first+last)/2;
    while(first<last && array[middle]!=num)
    {
        if(array[middle]>num)
            last = middle-1;
        else
            first = middle+1;
        middle = (first+last)/2;
    }
    if(array[middle]==num)
        cout<<"\nThe number "<<num<<" found at Position "<<middle;
    else
        cout<<"\nThe number "<<num<<" is not found in given Array";
    */

   //approach 2
   if(first<last)
   {
    int mid=(first+last)/2;
    if(num<=array[mid])
    {
        bin_search(array,first,mid,num);
    }
    else
    {
        bin_search(array,mid+1,last,num);
    }
   }
   else if(first==last)
   {
    if(array[first]==num)
    {
        cout<<"Element found at "<<first;
    }
    else
    {
        cout<<"Element not found";
    }
   }
}

//Main function
int main()
{
    int size;
    cout<<"Enter the Size of Array";
    cin>>size;
    int arr[size];
    cout<<"Enter the elements";
    for(int i=0;i<size;i++)
    {
        cin>>arr[i];
        cout<<arr[i]<<"\t";
    }
    cout<<endl;  
    int option;
    cout<<"Select option 1 for Insertion\n";
    cout<<"Select option 2 for Deletion\n";
    cout<<"Select option 3 for Traversal\n";
    cout<<"Select option 4 for Linear Search\n";
    cout<<"Select option 5 for Binary Search\n";
    cin>>option;
    switch (option)
    {
        int div;
        case 1:int E;
                cout<<"\nEnter the element to insert ";
                cin>>E;
                cout<<endl;
                cout<<"Select option 1 for Insertion at beginning\n";
                cout<<"Select option 2 for Insertion after any element\n";
                cout<<"Select option 3 for Insertion at end\n";
                cin>>div;
                switch(div){
                    case 1:insert_beg(arr,10,E,size);
                           break;
                    case 2:int index;
                           cout<<"Enter the position where to insert the element";
                           cin>>index;
                           insert_afterany(arr,10,E,size,index);
                           break;
                    case 3:insert_end(arr,10,E,size);
                           break;
                    default:cout<<"wrong choice";
                    
                }
                
                break;


        case 2:cout<<"Select option 1 for Deletion at beginning\n";
                cout<<"Select option 2 for Deletion after any element\n";
                cout<<"Select option 3 for Deletion at end\n";
                cin>>div;
                switch(div){
                    case 1:del_beg(arr,size);
                            break;

                    case 2:int index;
                           cout<<"Enter the position at which to delete the element";
                           cin>>index;
                           del_any(arr,size,index);
                            break;
                    case 3:del_end(arr,size);
                            break;
                    default:cout<<"wrong choice";
                }
                break;



        case 3:cout<<"All the elements are\n";
                for(int i=0;i<size;i++)
                {
                    cout<<arr[i]<<"  ";
                }
                break;


        case 4:
                int target,ans;
                cout<<"Enter the Element to Search in an array";
                cin>>target;
                ans = linearSearch(arr,size, target);
                if(ans==-1)
                    cout<<"Element not found";
                else
                    cout << "Element found at index: [" << ans <<"]";
                break;


        case 5:
                int Element;
                cout<<"Enter the Element to Search in an array";
                cin>>Element;
                bin_search(arr,0,size-1,Element);
               break;
        default:cout<<"Select between 1 to 6";
    }
return 0;
}

